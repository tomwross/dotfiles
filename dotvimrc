if &compatible
    set nocompatible
endif

set rtp+=~/.vim/bundle/Vundle.vim
set rtp+=/usr/local/opt/fzf
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'mileszs/ack.vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'junegunn/fzf.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'jnurmine/Zenburn'
Plugin 'joshdick/onedark.vim'
Plugin 'tweekmonster/django-plus.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'kien/ctrlp.vim'
Plugin 'sheerun/vim-polyglot'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}

call vundle#end()
set runtimepath^=~/.vim/bundle/ctrlp.vim

" General stuff
set visualbell
set noerrorbells

set hidden

filetype plugin indent on

set modeline

let mapleader = ','

set splitbelow
set splitright

" Appearance
set bg=dark

set number
set relativenumber

set showcmd
set cmdheight=1

set cursorline
set ruler
set laststatus=2
set showtabline=1

set virtualedit=onemore

syntax on
filetype on
filetype plugin on
filetype indent on

" backups
set backupdir=~/.vim/tmp,/var/tmp,/tmp
set directory=~/.vim/tmp,/var/tmp,/tmp

if has("persistent_undo")
    " Keep undo history across sessions, by storing in file.
    set undodir=~/.vim/backups
    set undofile
endif

" Indent
set tabstop=4
set shiftwidth=4
set softtabstop=4

set shiftround
set expandtab

" Search
set ignorecase
set smartcase

set incsearch
set hlsearch
set wrapscan

" Clear highlighted search
nnoremap <silent> <leader>/ :nohlsearch<cr>

" nerd tree
map <leader>n :NERDTreeToggle<cr>

" ycm
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" python highlighting
let python_highlight_all=1
let g:python_highlight_all = 1
syntax on

" ctags
set tags=./tags;,tags;

" themes
call togglebg#map("<F5>")

"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif

"if has('gui_running')
  "set background=dark
  "colorscheme onedark
"else
  "colorscheme zenburn
"endif

set background=dark
colorscheme onedark
